generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Size {
  XS
  S
  M
  L
  XL
  XXL
  XXXL
  UNIQUE
}

enum Gender {
  male
  female
  unisex
}

enum Role {
  admin
  user
}

model Category {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Product Product[]
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String
  inStock     Int
  price       Float    @default(0)
  sizes       Size[]   @default([])
  slug        String   @unique
  tags        String[] @default([])
  gender      Gender
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  ProductImage ProductImage[]

  @@index([gender])
}

model ProductImage {
  id  Int    @id @default(autoincrement())
  url String

  images    Product @relation(fields: [productId], references: [id])
  productId String
}

model User {
  id            String   @id @default(uuid())
  name          String
  email         String   @unique
  emailVerified Boolean? @default(false)
  password      String
  role          Role     @default(user)
  image         String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  UserAddress UserAddress?
}

model UserAddress {
  id         String  @id @default(uuid())
  name       String
  lastName   String
  address    String
  address2   String?
  postalCode String
  phone      String
  city       String

  Country   Country @relation(fields: [countryId], references: [id])
  countryId String

  User   User   @relation(fields: [userId], references: [id])
  userId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Country {
  id   String @id
  name String

  UserAddress UserAddress[]

  createdAt DateTime @default(now())
}
